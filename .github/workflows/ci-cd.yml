name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: ${{ vars.PROJECT_ID }}
  GKE_CLUSTER: ${{ vars.GKE_CLUSTER }}
  GKE_ZONE: ${{ vars.GKE_ZONE }}
  REGISTRY: ${{ vars.REGISTRY }}
  IMAGE: ${{ vars.IMAGE }}
  DEPLOYMENT_NAME: ${{ vars.DEPLOYMENT_NAME }}

jobs:
  deploy:
    name: Setup, Build, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # ... (previous steps remain the same)

    - name: Build Docker image
      run: |
        docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE }}:$GITHUB_SHA .
        docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE }}:latest .

    - name: Push Docker image
      run: |
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE }}:$GITHUB_SHA
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE }}:latest

    - name: Create values.yaml
      run: |
        mkdir -p ./portfolio-helm
        cat << EOF > ./portfolio-helm/values.yaml
        replicaCount: 1

        image:
          repository: ${{ env.REGISTRY }}/${{ env.IMAGE }}
          tag: latest
          pullPolicy: Always

        nameOverride: ""
        fullnameOverride: ""

        service:
          type: NodePort
          port: 80
          targetPort: 3000

        ingress:
          enabled: true
          className: "gce"
          annotations:
            kubernetes.io/ingress.class: gce
            kubernetes.io/ingress.global-static-ip-name: ${{ secrets.INGRESS_STATIC_IP_NAME }}
            ingress.gcp.kubernetes.io/pre-shared-cert: ${{ secrets.INGRESS_PRE_SHARED_CERT }}
            kubernetes.io/ingress.allow-http: "true"
            ingress.gcp.kubernetes.io/force-ssl-redirect: "true"
          hosts:
            - host: ${{ secrets.INGRESS_HOST }}
              paths:
                - path: /
                  pathType: Prefix
          tls: []

        resources: {}

        nodeSelector: {}

        tolerations: []

        affinity: {}
        EOF

    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.4.0

    - name: Validate Helm chart
      run: helm lint ./portfolio-helm

    - name: Deploy to GKE
      run: |
        helm upgrade --install ${{ env.DEPLOYMENT_NAME }} ./portfolio-helm \
          --namespace default \
          --set image.repository=${{ env.REGISTRY }}/${{ env.IMAGE }} \
          --set image.tag=latest

    - name: Wait for deployment
      run: |
        kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }} -n default --timeout=5m

    - name: Clean up credentials
      if: always()
      run: rm -f gcp-key.json
